# -*- coding: utf-8 -*-
"""
Configura√ß√µes do Sistema de Automa√ß√£o Manychat + Google Sheets
"""

import os
from datetime import datetime

# ================================
# CONFIGURA√á√ïES GOOGLE SHEETS
# ================================

# Planilha principal de sorteios
PLANILHA_SORTEIOS_ID = "1D84AsjVlCeXmW2hJEIVKBj6EHWe4xYfB6wd-JpHf_Ug"
PLANILHA_SORTEIOS_URL = f"https://docs.google.com/spreadsheets/d/{PLANILHA_SORTEIOS_ID}/edit"

# Planilha template de participantes
PLANILHA_TEMPLATE_ID = "1VWbKvHQt7MP3WAkGLLgV3mKRa3xyBwglFoqDkF3QQaE"
PLANILHA_TEMPLATE_URL = f"https://docs.google.com/spreadsheets/d/{PLANILHA_TEMPLATE_ID}/edit"

# Credenciais Google
GOOGLE_CREDENTIALS_PATH = os.getenv('GOOGLE_CREDENTIALS_PATH', 'credentials.json')

# ================================
# CONFIGURA√á√ïES MANYCHAT
# ================================

# Token da API Manychat (para verifica√ß√µes)
MANYCHAT_API_TOKEN = "1066870:38e7bfe6809eec0a08e7f39e798d9348"

# URLs das automa√ß√µes (CONFIGURAR COM AS URLs REAIS)
AUTOMACOES_URLS = {
    'instagram': 'https://app.manychat.com/fb/1066870/cms/files/content/20250711329/1_351235/edit',
    'facebook': 'URL_DA_AUTOMACAO_FACEBOOK',  # CONFIGURAR
    'whatsapp': 'URL_DA_AUTOMACAO_WHATSAPP'   # CONFIGURAR
}

# ================================
# TEXTOS DOS BLOCOS (BUSCA POR TEXTO)
# ================================

# Textos para localizar blocos condicionais
BLOCOS_CONDICIONAIS = {
    'dia_sorteio': ['Dia Sorteio', 'Dia sorteio', 'Dia do Sorteio', 'Dia do sorteio'],
    'dia_sorteio_menos_1': ['Dia Sorteio -1', 'Dia sorteio -1', 'Dia do Sorteio -1', 'Dia do sorteio -1'],
    'dia_sorteio_menos_2': ['Dia Sorteio -2', 'Dia sorteio -2', 'Dia do Sorteio -2', 'Dia do sorteio -2'],
    'dia_sorteio_menos_3': ['Dia Sorteio -3', 'Dia sorteio -3', 'Dia do Sorteio -3', 'Dia do sorteio -3']
}

# Textos para localizar blocos de planilha
BLOCOS_PLANILHA = ['Planilha', 'planilha', 'Google Planilhas', 'Google Sheets']

# Textos para localizar blocos de a√ß√£o
BLOCOS_ACAO = ['A√ß√µes - Id Sorteio', 'A√ß√£o - Id Sorteio', 'Id Sorteio', 'A√ß√µes Id Sorteio']

# ================================
# MAPEAMENTOS GOOGLE SHEETS
# ================================

# Campos fixos (iguais em todas as automa√ß√µes)
CAMPOS_FIXOS_MAPEAMENTO = {
    "Nome Completo": "Nome Completo",
    "ID do contato": "C√≥digo de Sorteio",
    "Username do Instagram": "In√≠cio Instagram",
    "ID da P√°gina do Facebook": "In√≠cio Facebook"
}

# Campos vari√°veis por automa√ß√£o
CAMPOS_VARIAVEIS_MAPEAMENTO = {
    'instagram': "Data - Instagram",
    'facebook': "Data - Facebook",
    'whatsapp': "Data - Whatsapp"
}

# Coluna de destino no Google Sheets
COLUNA_DESTINO_VARIAVEL = "Acesso"

# ================================
# CONFIGURA√á√ïES SELENIUM
# ================================

# Configura√ß√µes do Chrome
CHROME_OPTIONS = [
    '--headless',
    '--no-sandbox',
    '--disable-dev-shm-usage',
    '--disable-gpu',
    '--window-size=1920,1080',
    '--disable-extensions',
    '--disable-plugins',
    '--disable-images',
    '--disable-javascript',
    '--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
]

# Diret√≥rio para dados do usu√°rio (sess√£o)
CHROME_USER_DATA_DIR = '/tmp/chrome-user-data'

# Timeouts
SELENIUM_TIMEOUT = 30
SELENIUM_IMPLICIT_WAIT = 10

# ================================
# CONFIGURA√á√ïES DO SISTEMA
# ================================

# Intervalo de verifica√ß√£o (em minutos)
INTERVALO_VERIFICACAO = 5

# Configura√ß√µes de log
LOG_LEVEL = 'INFO'
LOG_FORMAT = '[%(asctime)s] %(levelname)s: %(message)s'
LOG_MAX_LINES = 1000

# Configura√ß√µes Flask
FLASK_HOST = '0.0.0.0'
FLASK_PORT = int(os.getenv('PORT', 5000))
FLASK_DEBUG = os.getenv('FLASK_DEBUG', 'false').lower() == 'true'

# ================================
# CONFIGURA√á√ïES DE NOTIFICA√á√ÉO
# ================================

# Email para notifica√ß√µes (opcional)
EMAIL_NOTIFICACAO = os.getenv('EMAIL_NOTIFICACAO', '')

# Webhook para notifica√ß√µes (opcional)
WEBHOOK_NOTIFICACAO = os.getenv('WEBHOOK_NOTIFICACAO', '')

# ================================
# SELETORES SELENIUM ALTERNATIVOS
# ================================

# M√∫ltiplos seletores para maior robustez
SELETORES_BLOCO = [
    "//div[contains(text(), '{}')]",
    "//span[contains(text(), '{}')]",
    "//button[contains(text(), '{}')]",
    "//a[contains(text(), '{}')]",
    "//*[contains(@class, 'block') and contains(text(), '{}')]",
    "//*[contains(@class, 'card') and contains(text(), '{}')]"
]

# Seletores para campos de data
SELETORES_CAMPO_DATA = [
    "//input[@type='date']",
    "//input[contains(@class, 'date')]",
    "//input[contains(@placeholder, 'data')]",
    "//input[contains(@placeholder, 'Data')]"
]

# Seletores para campos de texto
SELETORES_CAMPO_TEXTO = [
    "//input[@type='text']",
    "//textarea",
    "//input[not(@type)]",
    "//*[@contenteditable='true']"
]

# Seletores para bot√µes de salvar
SELETORES_BOTAO_SALVAR = [
    "//button[contains(text(), 'Salvar')]",
    "//button[contains(text(), 'Save')]",
    "//button[contains(@class, 'save')]",
    "//input[@type='submit']"
]

# ================================
# CONFIGURA√á√ïES DE RETRY
# ================================

# N√∫mero m√°ximo de tentativas
MAX_RETRIES = 3

# Delay entre tentativas (segundos)
RETRY_DELAY = 5

# ================================
# MENSAGENS DO SISTEMA
# ================================

MENSAGENS = {
    'sistema_iniciado': 'üöÄ Sistema de automa√ß√£o Manychat iniciado',
    'verificacao_iniciada': 'üîç Iniciando verifica√ß√£o de sorteios',
    'sorteio_finalizado': 'üéØ Sorteio finalizado detectado: {}',
    'proximo_sorteio': 'üìÖ Pr√≥ximo sorteio: {} em {}',
    'automacao_iniciada': 'ü§ñ Iniciando automa√ß√£o para {}',
    'bloco_atualizado': '‚úèÔ∏è Bloco "{}" atualizado com sucesso',
    'automacao_concluida': '‚úÖ Automa√ß√£o {} conclu√≠da com sucesso',
    'erro_sessao': 'üö® Sess√£o Manychat expirada - necess√°rio novo login',
    'erro_bloco': '‚ùå Erro ao atualizar bloco: {}',
    'sistema_pausado': '‚è∏Ô∏è Sistema pausado devido a erro cr√≠tico'
}

# ================================
# VALIDA√á√ïES
# ================================

def validar_configuracoes():
    """Valida se todas as configura√ß√µes necess√°rias est√£o presentes"""
    erros = []
    
    # Verifica credenciais Google
    if not os.path.exists(GOOGLE_CREDENTIALS_PATH):
        erros.append(f"Arquivo de credenciais n√£o encontrado: {GOOGLE_CREDENTIALS_PATH}")
    
    # Verifica URLs das automa√ß√µes
    for plataforma, url in AUTOMACOES_URLS.items():
        if url.startswith('URL_DA_AUTOMACAO'):
            erros.append(f"URL da automa√ß√£o {plataforma} n√£o configurada")
    
    return erros

# ================================
# FUN√á√ïES AUXILIARES
# ================================

def obter_timestamp():
    """Retorna timestamp atual formatado"""
    return datetime.now().strftime("%Y-%m-%d %H:%M:%S")

def formatar_data_brasileira(data):
    """Formata data no padr√£o brasileiro DD/MM/YYYY"""
    if isinstance(data, str):
        return data
    return data.strftime("%d/%m/%Y")

def formatar_hora_brasileira(hora):
    """Formata hora no padr√£o brasileiro HH:MM"""
    if isinstance(hora, str):
        return hora
    return hora.strftime("%H:%M")

# ================================
# CONFIGURA√á√ïES DE DESENVOLVIMENTO
# ================================

# Modo debug (desabilita Selenium em desenvolvimento)
DEBUG_MODE = os.getenv('DEBUG_MODE', 'false').lower() == 'true'

# Simular atualiza√ß√µes (para testes)
SIMULAR_ATUALIZACOES = os.getenv('SIMULAR_ATUALIZACOES', 'false').lower() == 'true'

if __name__ == "__main__":
    # Testa configura√ß√µes
    erros = validar_configuracoes()
    if erros:
        print("‚ùå Erros de configura√ß√£o encontrados:")
        for erro in erros:
            print(f"  - {erro}")
    else:
        print("‚úÖ Todas as configura√ß√µes est√£o v√°lidas")

